<!-- How do we cope with recordings spikes or analog traces -->


<LEMS_lite>

    <!-- Components -->
    <!-- ========== -->
    <DiscreteUpdateComponent name='lif_neuron'>
        <Interface>
            <Parameter name="bias"/>
            <Parameter name="gain"/>
            <Parameter name="constInput"/>
            
            <InputEventPort name="spike-in">
                <Parameter name="weight"/>
            </InputEventPort>
            
            <OutputEventPort name="spike-out"/>            

            <Constant name="one_over_rc_float" value="0.15429"/>
            <Constant name="dt" value="0.1E-3"/>
        </Interface>

        <State>
            <StateVariable name="v"/>
            <StateVariable name="inp"/>
            <StateVariable name="ref"/>
        </State>

        <Step>

            
            
            <!-- The original code ensures that 'v > 0', but I thin kthis should be OK! -->
            <var name="total" value="(gain * (inp + constInput)) + bias"/>
            <!-- Recieve event here -->
            <var name="dv" value="(total-v) * one_over_rc_float"/>
            <update variable="v" value="v + dv*dt"/>
            <update variable="inp" value="inp * (1-one_over_rc_float)"/>


            <!-- event_handling -->
            <condition_check/>

            
            <output variable="v" value="v"/>
        </Step>


        <OnEvent port='spike-in' >
            <update variable="inp" value="inp + weight * one_over_rc_float"/>
        </OnEvent>

        

        <!-- Is there a spike? -->
        <OnCondition if="v .gt. 1.0">
            <update variable="v" value="0"/>
            <update variable="ref" value="2"/>
        </OnCondition>
        
        <!-- Are are in a refactory period -->
        <OnCondition if="ref .gt. 0">
            <update variable="v" value="0"/>
            <update variable="ref" value="ref-1"/>
        </OnCondition>
        
    </DiscreteUpdateComponent>



    <!-- Network -->
    <!-- ======= -->
    <DataSources>
        <File name="src_img.txt" id='f_src_img' format='csv' shape="(784,1)" />

        <File name="c_code/NetworkSetup/mh_conv_nrn_params_level0" id='f_params_pop0' format='csv' shape="(5,3000)"/>
        <File name="c_code/NetworkSetup/mh_conv_nrn_params_level1" id='f_params_pop1' format='csv' shape="(5,1500)"/>
        <File name="c_code/NetworkSetup/mh_conv_nrn_params_level2" id='f_params_pop2' format='csv' shape="(5,900)"/>
        <File name="c_code/NetworkSetup/mh_conv_nrn_params_level3" id='f_params_pop3' format='csv' shape="(5,152)"/>

        <File name="c_code/NetworkSetup/mh_conv_nrn_connections_levels_0_1" id='f_conns_pop0_pop1' format='csv' shape="(3,?)"/>
        <File name="c_code/NetworkSetup/mh_conv_nrn_connections_levels_1_2" id='f_conns_pop1_pop2' format='csv' shape="(3,?)"/>
        <File name="c_code/NetworkSetup/mh_conv_nrn_connections_levels_2_3" id='f_conns_pop2_pop3' format='csv' shape="(3,?)"/>



        <!-- N.B Zero based indexing -->

        <!-- Population parameters: -->
        <!-- ====================== -->
        <!-- Pop0 -->
        <Array name='pop0_bias'>       <FileSource file='f_params_pop0' column='1'/> </Array>
        <Array name='pop0_gain'>       <FileSource file='f_params_pop0' column='2'/> </Array>
        <Array name='pop0_constInput'> <FileSource file='f_params_pop0' column='3'/> </Array>
        <Array name='pop0_inp'>        <FileSource file='f_params_pop0' column='4'/> </Array>

        <!-- Pop1 -->
        <Array name='pop1_bias'>       <FileSource file='f_params_pop1' column='1'/> </Array>
        <Array name='pop1_gain'>       <FileSource file='f_params_pop1' column='2'/> </Array>
        <Array name='pop1_constInput'> <FileSource file='f_params_pop1' column='3'/> </Array>
        <Array name='pop1_inp'>        <FileSource file='f_params_pop1' column='4'/> </Array>

        <!-- Pop2 -->
        <Array name='pop2_bias'>       <FileSource file='f_params_pop2' column='1'/> </Array>
        <Array name='pop2_gain'>       <FileSource file='f_params_pop2' column='2'/> </Array>
        <Array name='pop2_constInput'> <FileSource file='f_params_pop2' column='3'/> </Array>
        <Array name='pop2_inp'>        <FileSource file='f_params_pop2' column='4'/> </Array>

        <!-- Pop3 -->
        <Array name='pop3_bias'>       <FileSource file='f_params_pop3' column='1'/> </Array>
        <Array name='pop3_gain'>       <FileSource file='f_params_pop3' column='2'/> </Array>
        <Array name='pop3_constInput'> <FileSource file='f_params_pop3' column='3'/> </Array>
        <Array name='pop3_inp'>        <FileSource file='f_params_pop3' column='4'/> </Array>


        <!-- Connection weights: -->
        <!-- ====================== -->
        <!-- Pop0 to Pop1 -->
        <Array name='conn01_pre'>    <FileSource file='f_conns_pop0_pop1' column='0'/> </Array>
        <Array name='conn01_post'>   <FileSource file='f_conns_pop0_pop1' column='1'/> </Array>
        <Array name='conn01_weight'> <FileSource file='f_conns_pop0_pop1' column='2'/> </Array>

        <!-- Pop1 to Pop2 -->
        <Array name='conn12_pre'>    <FileSource file='f_conns_pop1_pop2' column='0'/> </Array>
        <Array name='conn12_post'>   <FileSource file='f_conns_pop1_pop2' column='1'/> </Array>
        <Array name='conn12_weight'> <FileSource file='f_conns_pop1_pop2' column='2'/> </Array>

        <!-- Pop2 to Pop3 -->
        <Array name='conn23_pre'>    <FileSource file='f_conns_pop2_pop3' column='0'/> </Array>
        <Array name='conn23_post'>   <FileSource file='f_conns_pop2_pop3' column='1'/> </Array>
        <Array name='conn23_post'>   <FileSource file='f_conns_pop2_pop3' column='1'/> </Array>
        <Array name='conn23_weight'> <FileSource file='f_conns_pop2_pop3' column='2'/> </Array>

        <!-- This would be more efficient: -->
        <!-- 
        <Array name='bias'> <ListSource values='10.31933, 5.94921, 0.63964'/> </Array>
        <Array name='gain'> <ListSource values='8.7792, 1.37988, 10.0195'/> </Array>
        -->
    </DataSources>


    <ComponentArray name="level0" component="lif_neuron" size="3000">
        <let parameter="constInput" array="pop0_constInput"/>
        <let parameter="bias" array="pop0_bias"/>
        <let parameter="gain" array="pop0_gain"/>

        <initialise state_variable="inp" array="pop0_inp" />
    </ComponentArray>

    <ComponentArray name="level1" component="lif_neuron" size="1500">
        <let parameter="constInput" array="pop1_constInput"/>
        <let parameter="bias" array="pop1_bias"/>
        <let parameter="gain" array="pop1_gain"/>

        <initialise state_variable="inp" array="pop1_inp" />
    </ComponentArray>

    <ComponentArray name="level2" component="lif_neuron" size="900">
        <let parameter="constInput" array="pop2_constInput"/>
        <let parameter="bias" array="pop2_bias"/>
        <let parameter="gain" array="pop2_gain"/>

        <initialise state_variable="inp" array="pop2_inp" />
    </ComponentArray>


    <ComponentArray name="level3" component="lif_neuron" size="150">        
        <let parameter="constInput" array="pop3_constInput"/>
        <let parameter="bias" array="pop3_bias"/>
        <let parameter="gain" array="pop3_gain"/>

        <initialise state_variable="inp" array="pop3_inp" />
    </ComponentArray>



    <!-- Connect Pop0 to Pop1 -->
    <EventConnections from="level0" to="level1">
        <EventSource port="spike-out"/>
        <EventTarget port="spike-in"/>

        <SourceTargetConnector> <FromArrayConnector pre="conn01_pre" post="conn01_post"/> </SourceTargetConnector>

        <ConnectionProperties>
            <Property name="weight" array="conn01_weight"/>
            <Delay value="0"/>
        </ConnectionProperties>

        <EventArguments>
            <Arg name="weight" value="connection.weight"/>
        </EventArguments>
        
    </EventConnections>




    <!-- Connect Pop1 to Pop2 -->
    <EventConnections from="level1" to="level2">
        <EventSource port="spike-out"/>
        <EventTarget port="spike-in"/>

        <SourceTargetConnector> <FromArrayConnector pre="conn12_pre" post="conn12_post"/> </SourceTargetConnector>

        <ConnectionProperties>
            <Property name="weight" array="conn12_weight"/>
            <Delay value="0"/>
        </ConnectionProperties>

        <EventArguments>
            <Arg name="weight" value="connection.weight"/>
        </EventArguments>
        
    </EventConnections>




    <!-- Connect Pop2 to Pop3 -->
    <EventConnections from="level2" to="level3">
        <EventSource port="spike-out"/>
        <EventTarget port="spike-in"/>

        <SourceTargetConnector> <FromArrayConnector pre="conn23_pre" post="conn23_post"/> </SourceTargetConnector>

        <ConnectionProperties>
            <Property name="weight" array="conn23_weight"/>
            <Delay value="0"/>
        </ConnectionProperties>

        <EventArguments>
            <Arg name="weight" value="connection.weight"/>
        </EventArguments>
    </EventConnections>




    
    
    <Simulation name='handwriting_simulation' dt='0.1e-3' duration='1.0'>
        <OutputFiles>
            <File id='f_out1_hdf' name='' format='hdf5'></File>
            <File id='f_out2_csv' name='' format='csv'></File>
            
        </OutputFiles>

        <Recording>
            <Record file='f_out1_hdf' component_array='pop1' indices='0,1,2,3' variable='V'></Record>

            <Record file='f_out2_csv' component_array='pop2' indices='0,1,2,3' variable='i'></Record>
        </Recording>
    
    </Simulation>


</LEMS_lite>





 
